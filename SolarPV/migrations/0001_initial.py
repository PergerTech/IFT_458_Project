# Generated by Django 3.0.5 on 2020-04-20 21:19

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import phone_field.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('client_id', models.AutoField(primary_key=True, serialize=False)),
                ('client_name', models.CharField(blank=True, max_length=100, null=True)),
                ('client_type', models.CharField(choices=[('bad', 'bad client'), ('good', 'good client'), ('good client', 'really good client'), ('bad client', 'really bad client')], default='good client', max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('manufacturer_id', models.AutoField(primary_key=True, serialize=False)),
                ('company_name', models.CharField(max_length=50, unique=True)),
                ('registered_country', models.CharField(blank=True, max_length=50, null=True)),
                ('contact_person', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'manufacturer',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('product_id', models.AutoField(primary_key=True, serialize=False)),
                ('model_number', models.CharField(max_length=45, unique=True)),
                ('manufacturing_date', models.CharField(max_length=8)),
                ('length', models.FloatField(blank=True, null=True)),
                ('width', models.FloatField(blank=True, null=True)),
                ('weight', models.FloatField(blank=True, null=True)),
                ('cell_area', models.FloatField(blank=True, null=True)),
                ('cell_technology', models.CharField(blank=True, max_length=50, null=True)),
                ('total_numbers_of_cells', models.IntegerField(blank=True, null=True)),
                ('number_of_cells_in_series', models.IntegerField(blank=True, null=True)),
                ('number_of_series_strings', models.IntegerField(blank=True, null=True)),
                ('number_of_bypass_diodes', models.IntegerField(blank=True, null=True)),
                ('series_fuse_rating', models.FloatField(blank=True, null=True)),
                ('interconnect_material', models.CharField(blank=True, max_length=45, null=True)),
                ('interconnect_supplier', models.CharField(blank=True, max_length=45, null=True)),
                ('superstrate_type', models.CharField(blank=True, max_length=45, null=True)),
                ('superstrate_manufacturer', models.CharField(blank=True, max_length=45, null=True)),
                ('substrate_type', models.CharField(blank=True, max_length=45, null=True)),
                ('substrate_manufacturer', models.CharField(blank=True, max_length=45, null=True)),
                ('frame_material', models.CharField(blank=True, max_length=45, null=True)),
                ('frame_adhesive', models.CharField(blank=True, max_length=45, null=True)),
                ('encapsulant_type', models.CharField(blank=True, max_length=45, null=True)),
                ('junction_box_type', models.CharField(blank=True, max_length=45, null=True)),
                ('junction_box_manufacturer', models.CharField(blank=True, max_length=45, null=True)),
                ('cable_type', models.CharField(blank=True, max_length=45, null=True)),
                ('connector_type', models.CharField(blank=True, max_length=45, null=True)),
                ('maximum_system_voltage', models.FloatField(blank=True, null=True)),
                ('rated_voc', models.FloatField(blank=True, null=True)),
                ('rated_isc', models.FloatField(blank=True, null=True)),
                ('rated_vmp', models.FloatField(blank=True, null=True)),
                ('rated_imp', models.FloatField(blank=True, null=True)),
                ('rated_pmp', models.FloatField(blank=True, null=True)),
                ('rated_ff', models.FloatField(blank=True, null=True)),
                ('manufacturer', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='SolarPV.Manufacturer')),
            ],
            options={
                'db_table': 'product',
            },
        ),
        migrations.CreateModel(
            name='Standard',
            fields=[
                ('standard_id', models.AutoField(primary_key=True, serialize=False)),
                ('standard_name', models.CharField(max_length=100, null=True)),
                ('description', models.CharField(max_length=200, null=True)),
                ('published_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Testlab',
            fields=[
                ('testlab_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=45)),
                ('address', models.CharField(max_length=100)),
                ('contact_person', models.ForeignKey(blank=True, db_column='contact_person', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'testlab',
            },
        ),
        migrations.CreateModel(
            name='Testresults',
            fields=[
                ('testresults_id', models.AutoField(primary_key=True, serialize=False)),
                ('report_condition', models.CharField(blank=True, max_length=255, null=True)),
                ('test_sequence', models.CharField(blank=True, max_length=255, null=True)),
                ('test_date', models.DateField(blank=True, null=True)),
                ('isc', models.FloatField(blank=True, null=True)),
                ('voc', models.FloatField(blank=True, null=True)),
                ('imp', models.FloatField(blank=True, null=True)),
                ('vmp', models.FloatField(blank=True, null=True)),
                ('pmp', models.FloatField(blank=True, null=True)),
                ('ff', models.FloatField(blank=True, null=True)),
                ('noct', models.FloatField(blank=True, null=True)),
                ('data_source', models.ForeignKey(blank=True, db_column='data_source', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='SolarPV.Testlab')),
                ('product', models.ForeignKey(blank=True, db_column='product', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='SolarPV.Product')),
            ],
            options={
                'db_table': 'testresutls',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('service_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=200, null=True)),
                ('is_FI_required', models.BooleanField(default=False)),
                ('FI_frequency', models.FloatField(max_length=10, null=True)),
                ('standard', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='SolarPV.Standard')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('middle_name', models.CharField(blank=True, max_length=50, null=True)),
                ('job_title', models.CharField(blank=True, max_length=80, null=True)),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('office_phone', phone_field.models.PhoneField(blank=True, help_text='Office contact number', max_length=31)),
                ('cell_phone', phone_field.models.PhoneField(blank=True, help_text='Cell contact number', max_length=31)),
                ('prefix', models.CharField(choices=[('Mr', 'Mr'), ('Ms', 'Ms'), ('Mrs', 'Mrs'), ('Dr', 'Dr')], default=None, max_length=4)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SolarPV.Client')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('location_id', models.AutoField(primary_key=True, serialize=False)),
                ('address1', models.CharField(blank=True, max_length=100, null=True)),
                ('address2', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('postal_code', models.CharField(default=77777, max_length=5)),
                ('country', models.CharField(blank=True, max_length=50, null=True)),
                ('phone_number', phone_field.models.PhoneField(blank=True, max_length=31, null=True)),
                ('fax_number', phone_field.models.PhoneField(blank=True, max_length=31, null=True)),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='client', to='SolarPV.Client')),
            ],
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('certificate_id', models.AutoField(primary_key=True, serialize=False)),
                ('report_number', models.IntegerField(blank=True, null=True)),
                ('issue_date', models.DateField()),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='SolarPV.Location')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='SolarPV.Product')),
                ('standard_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='SolarPV.Standard')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
