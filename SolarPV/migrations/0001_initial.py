# Generated by Django 3.0.4 on 2020-03-16 16:19

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('manufacturer_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('registered_country', models.TextField(blank=True, null=True)),
                ('contact_person', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'manufacturer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('product_id', models.AutoField(primary_key=True, serialize=False)),
                ('model_number', models.CharField(max_length=45)),
                ('manufacturing_date', models.CharField(max_length=8, unique=True)),
                ('length', models.FloatField(blank=True, null=True)),
                ('width', models.FloatField(blank=True, null=True)),
                ('weight', models.FloatField(blank=True, null=True)),
                ('cell_area', models.FloatField(blank=True, null=True)),
                ('cell_technology', models.CharField(blank=True, max_length=50, null=True)),
                ('total_numbers_of_cells', models.IntegerField(blank=True, null=True)),
                ('number_of_cells_in_series', models.IntegerField(blank=True, null=True)),
                ('number_of_series_strings', models.IntegerField(blank=True, null=True)),
                ('number_of_bypass_diodes', models.IntegerField(blank=True, null=True)),
                ('series_fuse_rating', models.FloatField(blank=True, null=True)),
                ('interconnect_material', models.CharField(blank=True, max_length=45, null=True)),
                ('interconnect_supplier', models.CharField(blank=True, max_length=45, null=True)),
                ('superstrate_type', models.CharField(blank=True, max_length=45, null=True)),
                ('superstrate_manufacturer', models.CharField(blank=True, max_length=45, null=True)),
                ('substrate_type', models.CharField(blank=True, max_length=45, null=True)),
                ('substrate_manufacturer', models.CharField(blank=True, max_length=45, null=True)),
                ('frame_material', models.CharField(blank=True, max_length=45, null=True)),
                ('frame_adhesive', models.CharField(blank=True, max_length=45, null=True)),
                ('encapsulant_type', models.CharField(blank=True, max_length=45, null=True)),
                ('junction_box_type', models.CharField(blank=True, max_length=45, null=True)),
                ('junction_box_manufacturer', models.CharField(blank=True, max_length=45, null=True)),
                ('cable_type', models.CharField(blank=True, max_length=45, null=True)),
                ('connector_type', models.CharField(blank=True, max_length=45, null=True)),
                ('maximum_system_voltage', models.FloatField(blank=True, null=True)),
                ('rated_voc', models.FloatField(blank=True, null=True)),
                ('rated_isc', models.FloatField(blank=True, null=True)),
                ('rated_vmp', models.FloatField(blank=True, null=True)),
                ('rated_imp', models.FloatField(blank=True, null=True)),
                ('rated_pmp', models.FloatField(blank=True, null=True)),
                ('rated_ff', models.FloatField(blank=True, null=True)),
                ('manufacturer', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'product',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Testlab',
            fields=[
                ('testlab_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=45)),
                ('address', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'testlab',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Testresutls',
            fields=[
                ('testresults_id', models.AutoField(primary_key=True, serialize=False)),
                ('report_condition', models.CharField(blank=True, max_length=255, null=True)),
                ('test_squence', models.CharField(blank=True, max_length=255, null=True)),
                ('test_date', models.DateField(blank=True, null=True)),
                ('isc', models.FloatField(blank=True, null=True)),
                ('voc', models.FloatField(blank=True, null=True)),
                ('imp', models.FloatField(blank=True, null=True)),
                ('vmp', models.FloatField(blank=True, null=True)),
                ('pmp', models.FloatField(blank=True, null=True)),
                ('ff', models.FloatField(blank=True, null=True)),
                ('noct', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'testresutls',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('first_name', models.CharField(blank=True, max_length=45, null=True)),
                ('last_name', models.CharField(blank=True, max_length=45, null=True)),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('office_phone', models.CharField(blank=True, max_length=15, null=True)),
                ('cell_phone', models.CharField(blank=True, max_length=15, null=True)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'user',
                'managed': False,
            },
        ),
    ]
