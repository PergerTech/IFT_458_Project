# Generated by Django 3.0.4 on 2020-03-19 21:07

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('manufacturer_id', models.AutoField(primary_key=True, serialize=False)),
                ('company_name', models.CharField(max_length=50, unique=True)),
                ('registered_country', models.CharField(blank=True, max_length=50, null=True)),
                ('contact_person_id', models.IntegerField()),
            ],
            options={
                'db_table': 'manufacturer',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('product_id', models.AutoField(primary_key=True, serialize=False)),
                ('model_number', models.CharField(max_length=45)),
                ('manufacturing_date', models.CharField(max_length=8, unique=True)),
                ('length', models.FloatField(blank=True, null=True)),
                ('width', models.FloatField(blank=True, null=True)),
                ('weight', models.FloatField(blank=True, null=True)),
                ('cell_area', models.FloatField(blank=True, null=True)),
                ('cell_technology', models.CharField(blank=True, max_length=50, null=True)),
                ('total_numbers_of_cells', models.IntegerField(blank=True, null=True)),
                ('number_of_cells_in_series', models.IntegerField(blank=True, null=True)),
                ('number_of_series_strings', models.IntegerField(blank=True, null=True)),
                ('number_of_bypass_diodes', models.IntegerField(blank=True, null=True)),
                ('series_fuse_rating', models.FloatField(blank=True, null=True)),
                ('interconnect_material', models.CharField(blank=True, max_length=45, null=True)),
                ('interconnect_supplier', models.CharField(blank=True, max_length=45, null=True)),
                ('superstrate_type', models.CharField(blank=True, max_length=45, null=True)),
                ('superstrate_manufacturer', models.CharField(blank=True, max_length=45, null=True)),
                ('substrate_type', models.CharField(blank=True, max_length=45, null=True)),
                ('substrate_manufacturer', models.CharField(blank=True, max_length=45, null=True)),
                ('frame_material', models.CharField(blank=True, max_length=45, null=True)),
                ('frame_adhesive', models.CharField(blank=True, max_length=45, null=True)),
                ('encapsulant_type', models.CharField(blank=True, max_length=45, null=True)),
                ('junction_box_type', models.CharField(blank=True, max_length=45, null=True)),
                ('junction_box_manufacturer', models.CharField(blank=True, max_length=45, null=True)),
                ('cable_type', models.CharField(blank=True, max_length=45, null=True)),
                ('connector_type', models.CharField(blank=True, max_length=45, null=True)),
                ('maximum_system_voltage', models.FloatField(blank=True, null=True)),
                ('rated_voc', models.FloatField(blank=True, null=True)),
                ('rated_isc', models.FloatField(blank=True, null=True)),
                ('rated_vmp', models.FloatField(blank=True, null=True)),
                ('rated_imp', models.FloatField(blank=True, null=True)),
                ('rated_pmp', models.FloatField(blank=True, null=True)),
                ('rated_ff', models.FloatField(blank=True, null=True)),
                ('manufacturer', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'product',
            },
        ),
        migrations.CreateModel(
            name='Testlab',
            fields=[
                ('testlab_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=45)),
                ('address', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'testlab',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('first_name', models.CharField(blank=True, max_length=45, null=True)),
                ('last_name', models.CharField(blank=True, max_length=45, null=True)),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('office_phone', models.CharField(blank=True, max_length=15, null=True)),
                ('cell_phone', models.CharField(blank=True, max_length=15, null=True)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='Testresults',
            fields=[
                ('testresults_id', models.AutoField(primary_key=True, serialize=False)),
                ('report_condition', models.CharField(blank=True, max_length=255, null=True)),
                ('test_squence', models.CharField(blank=True, max_length=255, null=True)),
                ('test_date', models.DateField(blank=True, null=True)),
                ('isc', models.FloatField(blank=True, null=True)),
                ('voc', models.FloatField(blank=True, null=True)),
                ('imp', models.FloatField(blank=True, null=True)),
                ('vmp', models.FloatField(blank=True, null=True)),
                ('pmp', models.FloatField(blank=True, null=True)),
                ('ff', models.FloatField(blank=True, null=True)),
                ('noct', models.FloatField(blank=True, null=True)),
                ('data_source', models.ForeignKey(blank=True, db_column='data_source', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='SolarPV.Testlab')),
                ('product', models.ForeignKey(blank=True, db_column='product', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='SolarPV.Product')),
            ],
            options={
                'db_table': 'testresutls',
            },
        ),
        migrations.AddField(
            model_name='testlab',
            name='contact_person',
            field=models.ForeignKey(blank=True, db_column='contact_person', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='SolarPV.User'),
        ),
    ]
